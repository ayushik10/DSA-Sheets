class Solution {
public:
    int pivot ( vector<int>& nums )
    {
    int s = 0;
    int e = nums.size()-1;
    int mid = (s+e)/2;
    int ans = 0;

    while ( s<e ){
    if ( nums[mid] >= nums[0] ){
        s = mid+1;
        ans = mid;
    }
    else 
    e = mid ;
    mid = (s+e)/2;
    }
    return ans;
    }
    int searchElement(vector<int>& nums,int s, int e, int target) {

        while ( s <= e ){
        int mid = (s+e)/2;

        if ( nums[mid] == target){
        return mid ;
        }

        else if ( nums[mid] > target){
        e = mid -1;
        }

        else{
        s = mid +1;
        }
    }
    return -1;
    
    }
    int search(vector<int>& nums , int target){

        int piv = pivot(nums);
        int n = nums.size()-1;

        if (target >= nums[0] && target <= nums[piv]){
        return searchElement (nums , 0, piv, target);
    }
    else
    {
    return searchElement(nums ,piv+1, n , target );
    }
  }
    
};
